import java.util.Iterator;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.Screen;
import com.badlogic.gdx.audio.Music;
import com.badlogic.gdx.audio.Sound;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.math.MathUtils;
import com.badlogic.gdx.math.Rectangle;
import com.badlogic.gdx.math.Vector3;
import com.badlogic.gdx.utils.Array;
import com.badlogic.gdx.utils.TimeUtils;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.InputProcessor;

public class Player implements InputProcessor
{
    Texture popoImage;
    Rectangle popo;
    
    boolean upAir;
    boolean downAir;
    boolean jump;

    public Player()
    {
        popoImage = new Texture(Gdx.files.internal("Popo.png"));
        popo = new Rectangle();
        popo.x = 400;
        popo.y = 200;
        popo.width = 12;
        popo.height = 20;
        
        upAir = false;
        downAir = true;
        jump = false;

        Gdx.input.setInputProcessor(this);
    }

    public boolean keyDown (int keycode) 
    {
        switch(keycode)
        {
            case Keys.LEFT:
            GameScreen.keyLeft = true;
            return true;
            
            case Keys.RIGHT:
            GameScreen.keyRight = true;
            return true;
            
            case Keys.SPACE:
            if (!upAir && !downAir)
            {
                jump = true;
                upAir = true;
                downAir = false;
                System.out.println("hi");
            }
            return true;
        }
        return false;
    }

    public boolean keyUp (int keycode) 
    {
        switch(keycode)
        {
            case Keys.LEFT:
            GameScreen.keyLeft = false;
            return true;
            
            case Keys.RIGHT:
            GameScreen.keyRight = false;
            return true;
            
            case Keys.SPACE:
            jump = false;
            return true;
        }
        return false;
    }

    public boolean keyTyped (char character) 
    {
        return false;
    }

    public boolean touchDown (int x, int y, int pointer, int button) 
    {
        return false;
    }

    public boolean touchUp (int x, int y, int pointer, int button) 
    {
        return false;
    }

    public boolean touchDragged (int screenX, int screenY, int pointer)
    {

        return false;

    }

    public boolean mouseMoved (int x, int y)
    {
        return false;
    }

    public boolean scrolled (int amount)
    {
        return false;
    }

}
